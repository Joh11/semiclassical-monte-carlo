#+title: Semiclassical Monte Carlo
#+startup: content

* Files
- [[file:src/HamiltonianMod.jl]]: module to open the hamiltonian file format
- [[file:src/scmc.jl]]: the implementation itself
- [[file:tests/tests.jl]]: unit tests
  
* How it works
1. [X] Generate a random state vector
2. [X] Monte Carlo steps for convergence
3. [X] Compute known values, like energy or magnetization
4. [X] Determine the step for decorrelation
5. [X] Write RK8 (Dormand-Prince)
6. [X] Compute (dynamical) structural factor
7. [X] Put everything together

* Data format
- state vector : =(3, Ns, Nx, Ny)=

* Steps for MC simulations
1. Figure out the thermalization step using energy and magnetization
2. Figure out the stride looking at correlation
3. Run it ?

See the file [[file:scripts/checkparams.jl]] for these two steps. 

* Reproducing figure 4 from the SCMC paper
** Target figures

** Fix the wrong \(S\vec q(t)\) problem
*** Simple try with a single sample
#+DOWNLOADED: screenshot @ 2021-03-02 19:51:18
#+CAPTION: Figure 4 from the paper
[[file:imgs/2021-03-02_19-51-18_screenshot.png]]
#+DOWNLOADED: screenshot @ 2021-03-02 17:16:17
#+CAPTION: Only the first sample
[[file:imgs/2021-03-02_17-16-17_screenshot.png]]
#+DOWNLOADED: screenshot @ 2021-03-02 17:17:23
#+CAPTION: 74 samples
[[file:imgs/2021-03-02_17-17-23_screenshot.png]]
#+DOWNLOADED: screenshot @ 2021-03-02 19:44:50
#+CAPTION: 403 samples
[[file:imgs/2021-03-02_19-44-50_screenshot.png]]

*** Possible explanations
- Code is wrong (still possible)
- Some scaling issue:
  - For the temperature => wrong phase
  - For the momentum space => perhaps with other kpoints it's fine
- Convergence issue ? Unlikely

*** Check energy and magnetization conservation
They are not conserved !  This was not occuring before, with the two
spins system. Possibilities:

- bug in the code for for multiple unit cells
- the system was not special before (no thermalization), so even if
  the energy and magnetization moved a bit, it was likely to stay
  close

#+DOWNLOADED: screenshot @ 2021-03-03 14:44:15
[[file:imgs/2021-03-03_14-44-15_screenshot.png]]

*** Plotting the energy / magnetization non conservation as a function of the time step
#+begin_src julia
  T = 0.17
  L = 20
  nt = round(Int, t / dt)
  thermal = 20

  dts = [0.1, 0.05, 0.01, 0.005, 0.001, 0.0001]
#+end_src

#+DOWNLOADED: screenshot @ 2021-03-04 08:51:18
[[file:imgs/2021-03-04_08-51-18_screenshot.png]]

#+DOWNLOADED: screenshot @ 2021-03-04 12:00:33
[[file:imgs/2021-03-04_12-00-33_screenshot.png]]

It is finally working ! I was making shallow copies of the couplings
in the hamiltonian ...

#+DOWNLOADED: screenshot @ 2021-03-04 17:31:43
[[file:imgs/2021-03-04_17-31-43_screenshot.png]]

*** Improve sampling with the time evolution
#+DOWNLOADED: screenshot @ 2021-03-05 16:29:52
[[file:Reproducing_figure_4_from_the_SCMC_paper/2021-03-05_16-29-52_screenshot.png]]
*** Unit tests for Sqt
- solve the issue of the (sometimes) failing tests !

For the two spins problem:
- compute the structure factor for a uniform distribution of the spins
- compute the structure factor for the Boltzmann distribution

It is not this simple ... The structure factor can only be computed on
grid points in k space, yet given this is a single unit cell system,
only the Gamma point can be reached. I tried putting L² copies of the
same system, yet this is not working (due to the phase shift in R.q).

My analytical solution is wrong ! Because the frequency \(\omega =
J|M|\) needs to be averaged.

<2021-03-19 ven.>: I think now that my implementation is correct (see
the unit tests).

** See how Sqt / Sq0 evolves
Take some fixed k points always there:
- (0, 0)
- (pi, pi)
- (0, pi)
- (pi, 0)

See how does \(S_q(t) / S_q(0)\) evolves as L gets bigger.

See the file [[file:fig4.jl]]. 
- Start with small number of samples
- Pick a good L
- Converge in # of samples

** First results
The 4 kpoints I choose lead to trivial factors (constant). Is it to be
expected ? I did not set correctly the "pi" kpoints ! I should take
\(1 + L / 2\) instead of \(L - 1\).

\(t = 100\) is too large, I can easily do 10x less.
** Performance issues
The code is too slow to reproduce exactly the paper's results.

- revert the order of loops in =makef=
- check for wrong order of loops in other places
- make sure the complexity of RK8 is O(L²) (see
  [[file:complexity_rk8.jl]])

[[file:imgs/complexity_rk8.png]]

** Advices from Nikita
- before :: L = 40: 2.9622924454 seconds (10 samples)
- localfield loop + unpack :: L = 40: 1.0795456017 seconds (10 samples)

* Testing the energy resolved structure factor
Trying to reproduce this paper: [[https://arxiv.org/pdf/1508.07816.pdf][Dynamical structure factors and
excitation modes of the bilayer Heisenberg model]].

** Issue with the definition of the kpoints
They use 3D momenta, with the z component discretized to be 0 or
\(\pi\). For simplicity, I will only reproduce the \(k_z = 0\) band
diagrams.

** Reproduce Fig. 1 (upper figures only)
Parameters to find:
- Temperature :: \(\beta J = 50\) so \(T = 0.02\)
- Number of samples
- System size :: L = 20

*** Find the optimal params
(Do it for several \(g\) to be safe)

* Dimer order SKL

* Dynamical structure factor SKL
Found in skl_factor.jl, skl_factor_notebook.jl. 
** Find the params ?
- Use the nsample scan from dimer to choose the number of samples
- Use the same T scan
- Use the same dt / nt as before with bilayer
- Save both St and Somega
